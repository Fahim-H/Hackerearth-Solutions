//https://www.hackerearth.com/practice/data-structures/trees/heapspriority-queues/practice-problems/algorithm/monk-and-multiplication/description/

#include<bits/stdc++.h>
#define optimize() ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
using namespace std;
const int mx = 1e5+123;
int arr[mx];
int main()
{
    optimize();
    priority_queue <int> q;
    int n; cin>>n;
    for(int i=0; i<n; i++)cin>>arr[i];

    for(int i=0; i<n; i++){
        q.push(arr[i]);
        if(q.size() >= 3){
            int num1 = q.top(); q.pop();
            int num2 = q.top(); q.pop();
            int num3 = q.top(); q.pop();

            cout<<num1 * num2 * num3<<endl;
            q.push(num1);
            q.push(num2);
            q.push(num3);
        }
        else cout<<-1<<endl;
    }

    return 0;
}
