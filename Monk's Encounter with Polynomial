//https://www.hackerearth.com/practice/algorithms/searching/binary-search/practice-problems/algorithm/monks-encounter-with-polynomial/description/

#include <bits/stdc++.h>
#define optimize() ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define endl '\n'
typedef long long int ll;
using namespace std;

ll getk(ll a,ll b,ll c,ll x){
    return ((a*x*x)+(b*x)+c);
}

int main(){
    optimize();
    int tc; cin>>tc;
    while(tc--){
        ll a,b,c,k; cin>>a>>b>>c>>k;
        ll l = 0, r = 1e6, x;
        while(l <= r){
            ll mid = (l+r)>>1;
            ll temp = getk(a,b,c,mid);
            if(temp >= k){
                x = mid;
                r = mid-1;
            }
            else l = mid+1;
        }
        cout<<x<<endl;
    }
    return 0;
}
